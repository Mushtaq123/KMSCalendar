# Xamarin.iOS
# Build a Xamarin.iOS project.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
- master
- azure-pipelines

pool:
  vmImage: 'macos-latest'

variables:
  buildConfiguration: 'Debug'

steps:
# To manually select a Xamarin SDK version on the Microsoft-hosted macOS agent,
# configure this task with the *Mono* version that is associated with the
# Xamarin SDK version that you need, and set the "enabled" property to true.
# See https://go.microsoft.com/fwlink/?linkid=871629
- script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_12_0
  displayName: 'Select the Xamarin SDK version'
  enabled: false

- task: NuGetToolInstaller@1
  displayName: Install Nuget Tool

- task: NuGetCommand@2
  displayName: Restore NuGet Packages for Solution
  inputs:
    restoreSolution: '**/*.sln'

- task: DownloadSecureFile@1
  displayName: Download Debug AppSettings File
  name: secureDebugAppFile
  inputs:
    secureFile: 'appsettings.Development.json'

- task: DownloadSecureFile@1
  displayName: Download Release AppSettings File
  name: secureReleaseAppFile
  inputs:
    secureFile: 'appsettings.Production.json'

- task: Bash@3
  displayName: Link the secure file to the correct directory
  inputs:
    targetType: 'inline'
    script: |
      cd KMSCalendar/KMSCalendar/
      ln -s $(secureDebugAppFile.secureFilePath) appsettings.Development.json
      ln -s $(secureReleaseAppFile.secureFilePath) appsettings.Production.json

- task: XamariniOS@2
  inputs:
    solutionFile: '**/*.sln'
    configuration: '$(buildConfiguration)'
    packageApp: false
    runNugetRestore: false